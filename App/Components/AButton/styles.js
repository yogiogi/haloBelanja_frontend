// @flow
import { StyleSheet } from 'react-native';

import { Colors, Fonts, Metrics } from '../../Property';

const styles = StyleSheet.create({
  defaultContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  defaultButton: {
    backgroundColor: Colors.PickerNumber,
    height: Metrics.button.default.height,
    width: Metrics.button.default.width,
  },
  defaultText: {
    color: Colors.background,
    fontSize: Fonts.size.button,
    fontFamily: Fonts.type.base,
  },
  defaultIcon: {
    color: Colors.PickerNumber,
    padding: Metrics.metrics.padding8,
  },
  roundedContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  roundedButton: {
    backgroundColor: Colors.PickerNumber,
    height: Metrics.button.rounded.height,
    width: Metrics.button.rounded.width,
    borderWidth: Metrics.button.rounded.borderWidth,
    borderColor: Colors.PickerNumber,
    justifyContent: 'center',
    alignItems: 'center',
  },
  roundedButtonAzure: {
    height: Metrics.button.default.height,
    width: Metrics.button.default.width,
    borderWidth: Metrics.button.rounded.borderWidth,
    borderColor: Colors.whiteTwo,
    borderRadius: Metrics.button.default.cornerRadius,
    justifyContent: 'center',
    alignItems: 'center',
  },
  roundedButtonWarmRed: {
    height: Metrics.button.default.height,
    width: Metrics.button.default.width,
    borderWidth: Metrics.button.rounded.borderWidth,
    borderColor: Colors.danger,
    borderRadius: Metrics.button.default.cornerRadius,
    justifyContent: 'center',
    alignItems: 'center',
  },
  roundedButtonWarmRedDisableBorder: {
    borderColor: Colors.PickerNumber,
  },
  roundedText: {
    color: Colors.PickerNumber,
    fontSize: Fonts.size.button,
    fontFamily: Fonts.type.base,
    fontWeight: Fonts.weight.bold,
  },
  pickerContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  pickerButton: {
    width: Metrics.button.picker.width,
    height: Metrics.button.picker.height,
    borderWidth: Metrics.button.picker.borderWidth,
    borderColor: Colors.PickerNumber,
    paddingTop: 0,
    paddingBottom: 0,
  },
  pickerButtonLeft: {
    color: Colors.PickerNumber,
    borderTopLeftRadius: Metrics.button.picker.cornerRadius,
    borderBottomLeftRadius: Metrics.button.picker.cornerRadius,
  },
  pickerButtonRight: {
    borderTopRightRadius: Metrics.button.picker.cornerRadius,
    borderBottomRightRadius: Metrics.button.picker.cornerRadius,
  },
  pickerText: {
    color: Colors.black_61,
    fontSize: Fonts.size.buttonPicker,
    fontFamily: Fonts.type.base,
  },
  boxRoundedInnerWrapper: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    alignSelf: 'center',
    width: '100%',
  },
  boxRoundedButtonEnabled: {
    height: Metrics.button.default.height,
    width: '100%',
    justifyContent: 'center',
    alignItems: 'center',
    elevation: 0,
    borderWidth: Metrics.button.default.borderWidth,
    borderRadius: Metrics.button.default.cornerRadius,
    borderColor: Colors.success,
    backgroundColor: Colors.success,
  },

  boxReloadJenius: {
    ...Metrics.metrics.initPadding,
    height: 32,
    width: 65,
    borderWidth: Metrics.button.rounded.borderWidth,
    borderColor: Colors.success,
    borderRadius: Metrics.button.rounded.cornerRadius,
    backgroundColor: Colors.PickerNumber,
    elevation: 0,
    justifyContent: 'center',
    alignItems: 'center',
    minWidth: 85,
  },

  boxRoundedButtonDisabled: {
    height: Metrics.button.default.height,
    width: '100%',
    justifyContent: 'center',
    alignItems: 'center',
    elevation: 0,
    borderWidth: Metrics.button.default.borderWidth,
    borderRadius: Metrics.button.default.cornerRadius,
    borderColor: Colors.success,
    backgroundColor: Colors.success,
    opacity: Metrics.opacity.opacity05,
  },
  roundedDiscountButton: {
    ...Metrics.metrics.initPadding,
    backgroundColor: Colors.additionalDiscount,
    height: Metrics.button.discount.height,
    borderWidth: Metrics.button.rounded.borderWidth,
    borderColor: Colors.additionalDiscountBorder,
    borderRadius: Metrics.button.rounded.cornerRadius,
    elevation: 0,
    justifyContent: 'flex-end',
    alignItems: 'center',
    minWidth: 150,
  },
  roundedDiscountFilledButton: {
    backgroundColor: Colors.additionalDiscount,
    height: Metrics.button.discount.height,
    borderWidth: Metrics.button.rounded.borderWidth,
    borderColor: Colors.additionalDiscountBorder,
    borderTopLeftRadius: Metrics.button.rounded.cornerRadius,
    borderBottomLeftRadius: Metrics.button.rounded.cornerRadius,
    elevation: 0,
    paddingTop: Metrics.metrics.padding0,
    paddingBottom: Metrics.metrics.padding0,
    justifyContent: 'flex-end',
    alignItems: 'center',
  },
  roundedDiscountClearButton: {
    backgroundColor: Colors.additionalDiscount,
    height: Metrics.button.discount.height,
    borderWidth: Metrics.button.rounded.borderWidth,
    borderColor: Colors.additionalDiscountBorder,
    borderTopRightRadius: Metrics.button.rounded.cornerRadius,
    borderBottomRightRadius: Metrics.button.rounded.cornerRadius,
    elevation: 0,
    justifyContent: 'flex-end',
    alignItems: 'flex-end',
    width: 40,
  },
  roundedDiscountDivider: {
    width: 1,
    height: Metrics.button.discount.height,
    marginLeft: 5,
    marginRight: 5,
    backgroundColor: Colors.additionalDiscountBorder,
  },
  fullRectangularWrapper: {
    width: '100%',
    flexDirection: 'row',
    justifyContent: 'center',
    alignItems: 'center',
  },
  fullRectangularButton: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: Colors.snow,
  },
  greyButton: {
    borderColor: Colors.shadowBG,
    alignSelf: 'center',
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: Colors.PickerNumber,
    elevation: 0,
  },
  ButtonDownloadEnable: {
    width: Metrics.button.default.width,
    height: Metrics.button.default.height,
    alignSelf: 'center',
    justifyContent: 'center',
    alignItems: 'center',
    borderWidth: 1,
    borderRadius: 3,
    borderColor: Colors.primary,
    backgroundColor: Colors.snow,
  },
  ButtonDownloadEnableOpacity: {
    opacity: Metrics.opacity.opacity05,
  },
  ButtonDownloadDisable: {
    width: Metrics.button.default.width,
    height: Metrics.button.default.height,
    alignSelf: 'center',
    justifyContent: 'center',
    alignItems: 'center',
    borderWidth: 1,
    borderRadius: 3,
    borderColor: Colors.shadowBG,
    backgroundColor: Colors.PickerNumber,
  },
  IconDark: {
    color: Colors.black,
    padding: Metrics.metrics.padding5,
  },
  IconWarmRed: {
    color: Colors.danger,
    padding: Metrics.metrics.padding5,
  },
  roundedDarkWrapper: {
    flexDirection: 'row',
    justifyContent: 'center',
    alignItems: 'center',
  },
  lightWithDisabledButtonEnabled: {
    ...Metrics.container.alignCenter,
    width: Metrics.width.width100,
    marginTop: Metrics.marginTop.marginTop19,
    height: Metrics.height.height36,
    borderRadius: Metrics.borderRadius.borderRadius4,
    marginBottom: Metrics.marginBottom.marginBottom27,
    backgroundColor: Colors.primary,
  },
  lightWithDisabledButtonDisabled: {
    backgroundColor: Colors.PickerNumber,
  },
  uploadWrapper: {
    width: Metrics.width.width100,
  },
  uploadButtonBase: {
    height: Metrics.button.default.height,
    width: Metrics.width.width100,
    flexDirection: Metrics.metrics.columnReverse,
    alignItems: Metrics.metrics.flexStart,
    paddingLeft: Metrics.paddingLeft.paddingLeft20,
    borderWidth: Metrics.button.default.borderWidth,
    borderRadius: Metrics.button.rounded.cornerRadius,
  },
  uploadIconStyle: {
    marginRight: Metrics.marginRight.marginRight10,
  },
  uploadDefaultButton: {
    borderColor: Colors.whiteTwo,
    backgroundColor: Colors.PickerNumber,
    color: Colors.dark,
  },
  uploadSuccessButton: {
    borderColor: Colors.greenAccent,
    backgroundColor: Colors.PickerNumber,
    color: Colors.dark,
  },
  uploadErrorButton: {
    borderColor: Colors.red,
    backgroundColor: Colors.PickerNumber,
    color: Colors.dark,
  },
  buttonInnerStyle: {
    flexDirection: Metrics.metrics.rowReverse,
  },
  roundedBoxAddWrapper: {
    height: Metrics.button.default.height,
    width: Metrics.button.default.width,
    flexDirection: 'row',
    alignItems: 'center',
  },
  roundedButtonBoxAdd: {
    height: Metrics.button.default.height,
    width: Metrics.button.default.width,
    borderWidth: 0,
  },
  iconBoxAdd: {
    fontFamily: Fonts.type.medium,
    fontSize: 30,
    color: Colors.success,
    paddingLeft: 15,
    paddingRight: 22,
  },
  iconButton: {
    fontSize: Metrics.scaleSize(30),
  },
});

export {
  styles as default,
};
